<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4"
         xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
  <display-name>zzm</display-name>
  <welcome-file-list>
    <welcome-file>/jsp/login.jsp</welcome-file>
  </welcome-file-list>

<!--Spring MVC的中央控制器 用于拦截请求（url-pattern为*.action），并交由Spring MVC的后台控制器来处理。这一项配置是必须的
为了能够处理中文的post请求，再配置一个encodingFilter，以避免post请求中文出现乱码情况：-->
  <servlet>
    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/dispatcher.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Spring MVC Dispatcher Servlet</servlet-name>
    <url-pattern>*.action</url-pattern>
  </servlet-mapping>

  <!--<filter>-->
    <!--<description>Multipart MIME handling filter for Cocoon</description>-->
    <!--<display-name>Cocoon multipart filter</display-name>-->
    <!--<filter-name>CocoonMultipartFilter</filter-name>-->
    <!--<filter-class>org.apache.cocoon.servlet.multipart.MultipartFilter</filter-class>-->
  <!--</filter>-->

  <!--spring security过滤器-->
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/security.xml</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

<!--字符编码过滤器-->
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
    - Declare a filter for debugging incoming request
    -->
  <!--<filter>-->
    <!--<description>Log debug information about each request</description>-->
    <!--<display-name>Cocoon debug filter</display-name>-->
    <!--<filter-name>CocoonDebugFilter</filter-name>-->
    <!--<filter-class>org.apache.cocoon.servlet.DebugFilter</filter-class>-->
  <!--</filter>-->

  <!-- Filter mappings ================================================ -->

  <!--
    - Use the Cocoon multipart filter together with the Cocoon demo webapp
    -->
  <!--<filter-mapping>-->
    <!--<filter-name>CocoonMultipartFilter</filter-name>-->
    <!--<servlet-name>Cocoon</servlet-name>-->
  <!--</filter-mapping>-->
  <!--<filter-mapping>-->
    <!--<filter-name>CocoonMultipartFilter</filter-name>-->
    <!--<servlet-name>DispatcherServlet</servlet-name>-->
  <!--</filter-mapping>-->

  <!--
    - Use the Cocoon debug filter together with the Cocoon demo webapp
  <filter-mapping>
    <filter-name>CocoonDebugFilter</filter-name>
    <servlet-name>Cocoon</servlet-name>
  </filter-mapping>
    -->

  <!-- Servlet Context Listener ======================================= -->

  <!--
    - Declare Spring context listener which sets up the Spring Application Context
    - containing all Cocoon components (and user defined beans as well).
    -->
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--
    - Declare Spring request listener which sets up the required RequestAttributes
    - to support Springs and Cocoon custom bean scopes like the request scope or the
    - session scope.
    -->
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>

  <!-- Servlet Configuration ========================================== -->

  <!--
    - Servlet that dispatches requests to the Spring managed block servlets
    -->
  <!--<servlet>-->
    <!--<description>Cocoon blocks dispatcher</description>-->
    <!--<display-name>DispatcherServlet</display-name>-->
    <!--<servlet-name>DispatcherServlet</servlet-name>-->
    <!--<servlet-class>org.apache.cocoon.servletservice.DispatcherServlet</servlet-class>-->
    <!--<load-on-startup>1</load-on-startup>-->
  <!--</servlet>-->

  <!-- URL space mappings ============================================= -->

  <!--
    - Cocoon handles all the URL space assigned to the webapp using its sitemap.
    - It is recommended to leave it unchanged. Under some circumstances though
    - (like integration with proprietary webapps or servlets) you might have
    - to change this parameter.
    -->
  <!--<servlet-mapping>-->
    <!--<servlet-name>DispatcherServlet</servlet-name>-->
    <!--<url-pattern>/*</url-pattern>-->
  <!--</servlet-mapping>-->

</web-app>
        